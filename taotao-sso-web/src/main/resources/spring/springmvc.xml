<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:resource/resource.properties" />
	<!-- 配置注解驱动 -->
	<mvc:annotation-driven />
	<!-- 配置视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 配置包扫描器，扫描@Controller注解的类 -->
	<context:component-scan base-package="com.taotao.sso.controller" />
	<!-- 配置资源映射（两种方法） -->
	<!-- 方法一：当访问路径中有mapping中的格式的时候，就会到对应的location中找资源 -->
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/images/" mapping="/images/**" />
	<!-- 方法二：下面这句话会定有一个DefaultServletHTTPRequestHandler，它会像一个检查员，对进入DispatcherServlet的URL进行筛查。-->
	<!-- 如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。 -->
	<!-- <mvc:default-servlet-handler /> -->
	<!-- 引用dubbo服务 -->
	<dubbo:application name="taotao-sso-web" />
	<dubbo:registry protocol="zookeeper" address="192.168.156.60:2180" />
	<dubbo:reference interface="com.taotao.sso.service.UserService" id="userService" />
</beans>